syntax = "proto3";

service SceneDataService 
{
	rpc GetLevelData(LevelRequest) returns (LevelData) {}
	rpc GetMeshData(MeshRequest) returns (stream MeshTable) {}
	rpc GetTextureData(TextureRequest) returns (stream TextureData) {}
	rpc GetMeshDataChunk(MeshChunkRequest) returns (MeshDataChunk) {}
	rpc GetTextureDataChunk(TextureChunkRequest) returns (TextureDataChunk) {}
}

message LevelRequest
{
	int32 LevelId = 1;
}

message LevelData
{
	repeated ObjectData objectList = 1;
}

message MeshRequest
{
	int32 LevelId = 1;
}

message MeshTable
{
	map<int32, MeshData> meshDataTable = 1;
}

message MeshData
{
	repeated MeshDataChunk meshDataChunk = 1;
}

message MeshDataChunk
{
	string name =1;
	bytes dataChunk =2;
	int32 chunkNumber = 3; 
	int32 maxChunkNumber = 4;
    bool isLastChunk = 5;  
}

message TextureRequest
{
	int32 LevelId = 1;
}

message TextureTable
{
	map<int32, TextureData> textureDataTable = 1;
}

message TextureData
{
	repeated TextureDataChunk textureDataChunk = 1;
}

message TextureDataChunk
{
	string name =1;
	bytes dataChunk = 2;
	int32 chunkNumber = 3; 
	int32 maxChunkNumber = 4;
	bool isLastChunk = 5;
	int32 width =6;
	int32 height = 7;
}

message MeshChunkRequest
{
	int32 LevelId = 1;
	string name = 2;
	int32 chunkNumber =3;
}

message TextureChunkRequest
{
	int32 LevelId = 1;
	string name = 2;
	int32 chunkNumber = 3;
}

message ObjectData
{
	string name = 1;
	Vec3 position =2;
	Vec3 rotation = 3;
	Vec3 scale = 4;
	int32 meshReference = 5;
	int32 textureReference = 6;
}

message Vec3 
{
    float x = 1;
    float y = 2;
    float z = 3;
}
