// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: LevelData.proto
// Protobuf C++ Version: 5.29.3

#include "LevelData.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr TextureDataChunk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        datachunk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        chunknumber_{0},
        maxchunknumber_{0},
        islastchunk_{false},
        width_{0},
        height_{0},
        channel_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TextureDataChunk::TextureDataChunk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextureDataChunkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextureDataChunkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextureDataChunkDefaultTypeInternal() {}
  union {
    TextureDataChunk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextureDataChunkDefaultTypeInternal _TextureDataChunk_default_instance_;

inline constexpr TextureChunkRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        levelid_{0},
        chunknumber_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TextureChunkRequest::TextureChunkRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextureChunkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextureChunkRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextureChunkRequestDefaultTypeInternal() {}
  union {
    TextureChunkRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextureChunkRequestDefaultTypeInternal _TextureChunkRequest_default_instance_;

inline constexpr ObjectData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        meshreference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        texturereference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ObjectData::ObjectData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ObjectDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectDataDefaultTypeInternal() {}
  union {
    ObjectData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectDataDefaultTypeInternal _ObjectData_default_instance_;

inline constexpr MeshDataChunk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        datachunk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        chunknumber_{0},
        maxchunknumber_{0},
        islastchunk_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MeshDataChunk::MeshDataChunk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshDataChunkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshDataChunkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshDataChunkDefaultTypeInternal() {}
  union {
    MeshDataChunk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshDataChunkDefaultTypeInternal _MeshDataChunk_default_instance_;

inline constexpr MeshChunkRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        levelid_{0},
        chunknumber_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MeshChunkRequest::MeshChunkRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshChunkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshChunkRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshChunkRequestDefaultTypeInternal() {}
  union {
    MeshChunkRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshChunkRequestDefaultTypeInternal _MeshChunkRequest_default_instance_;

inline constexpr LevelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : levelid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LevelRequest::LevelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LevelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LevelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LevelRequestDefaultTypeInternal() {}
  union {
    LevelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LevelRequestDefaultTypeInternal _LevelRequest_default_instance_;

inline constexpr LevelData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : objectlist_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LevelData::LevelData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LevelDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LevelDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LevelDataDefaultTypeInternal() {}
  union {
    LevelData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LevelDataDefaultTypeInternal _LevelData_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_LevelData_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_LevelData_2eproto = nullptr;
const ::uint32_t
    TableStruct_LevelData_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::LevelRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::LevelRequest, _impl_.levelid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::LevelData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::LevelData, _impl_.objectlist_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MeshDataChunk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MeshDataChunk, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::MeshDataChunk, _impl_.datachunk_),
        PROTOBUF_FIELD_OFFSET(::MeshDataChunk, _impl_.chunknumber_),
        PROTOBUF_FIELD_OFFSET(::MeshDataChunk, _impl_.maxchunknumber_),
        PROTOBUF_FIELD_OFFSET(::MeshDataChunk, _impl_.islastchunk_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::TextureDataChunk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TextureDataChunk, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::TextureDataChunk, _impl_.datachunk_),
        PROTOBUF_FIELD_OFFSET(::TextureDataChunk, _impl_.chunknumber_),
        PROTOBUF_FIELD_OFFSET(::TextureDataChunk, _impl_.maxchunknumber_),
        PROTOBUF_FIELD_OFFSET(::TextureDataChunk, _impl_.islastchunk_),
        PROTOBUF_FIELD_OFFSET(::TextureDataChunk, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::TextureDataChunk, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::TextureDataChunk, _impl_.channel_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MeshChunkRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MeshChunkRequest, _impl_.levelid_),
        PROTOBUF_FIELD_OFFSET(::MeshChunkRequest, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::MeshChunkRequest, _impl_.chunknumber_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::TextureChunkRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TextureChunkRequest, _impl_.levelid_),
        PROTOBUF_FIELD_OFFSET(::TextureChunkRequest, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::TextureChunkRequest, _impl_.chunknumber_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ObjectData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ObjectData, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::ObjectData, _impl_.meshreference_),
        PROTOBUF_FIELD_OFFSET(::ObjectData, _impl_.texturereference_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::LevelRequest)},
        {9, -1, -1, sizeof(::LevelData)},
        {18, -1, -1, sizeof(::MeshDataChunk)},
        {31, -1, -1, sizeof(::TextureDataChunk)},
        {47, -1, -1, sizeof(::MeshChunkRequest)},
        {58, -1, -1, sizeof(::TextureChunkRequest)},
        {69, -1, -1, sizeof(::ObjectData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_LevelRequest_default_instance_._instance,
    &::_LevelData_default_instance_._instance,
    &::_MeshDataChunk_default_instance_._instance,
    &::_TextureDataChunk_default_instance_._instance,
    &::_MeshChunkRequest_default_instance_._instance,
    &::_TextureChunkRequest_default_instance_._instance,
    &::_ObjectData_default_instance_._instance,
};
const char descriptor_table_protodef_LevelData_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017LevelData.proto\"\037\n\014LevelRequest\022\017\n\007Lev"
    "elId\030\001 \001(\005\",\n\tLevelData\022\037\n\nobjectList\030\001 "
    "\003(\0132\013.ObjectData\"r\n\rMeshDataChunk\022\014\n\004nam"
    "e\030\001 \001(\t\022\021\n\tdataChunk\030\002 \001(\014\022\023\n\013chunkNumbe"
    "r\030\003 \001(\005\022\026\n\016maxChunkNumber\030\004 \001(\005\022\023\n\013isLas"
    "tChunk\030\005 \001(\010\"\245\001\n\020TextureDataChunk\022\014\n\004nam"
    "e\030\001 \001(\t\022\021\n\tdataChunk\030\002 \001(\014\022\023\n\013chunkNumbe"
    "r\030\003 \001(\005\022\026\n\016maxChunkNumber\030\004 \001(\005\022\023\n\013isLas"
    "tChunk\030\005 \001(\010\022\r\n\005width\030\006 \001(\005\022\016\n\006height\030\007 "
    "\001(\005\022\017\n\007channel\030\010 \001(\005\"F\n\020MeshChunkRequest"
    "\022\017\n\007LevelId\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\023\n\013chunk"
    "Number\030\003 \001(\005\"I\n\023TextureChunkRequest\022\017\n\007L"
    "evelId\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\023\n\013chunkNumbe"
    "r\030\003 \001(\005\"K\n\nObjectData\022\014\n\004name\030\001 \001(\t\022\025\n\rm"
    "eshReference\030\005 \001(\t\022\030\n\020textureReference\030\006"
    " \001(\t2\272\001\n\020SceneDataService\022+\n\014GetLevelDat"
    "a\022\r.LevelRequest\032\n.LevelData\"\000\0227\n\020GetMes"
    "hDataChunk\022\021.MeshChunkRequest\032\016.MeshData"
    "Chunk\"\000\022@\n\023GetTextureDataChunk\022\024.Texture"
    "ChunkRequest\032\021.TextureDataChunk\"\000b\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_LevelData_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_LevelData_2eproto = {
    false,
    false,
    801,
    descriptor_table_protodef_LevelData_2eproto,
    "LevelData.proto",
    &descriptor_table_LevelData_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_LevelData_2eproto::offsets,
    file_level_enum_descriptors_LevelData_2eproto,
    file_level_service_descriptors_LevelData_2eproto,
};
// ===================================================================

class LevelRequest::_Internal {
 public:
};

LevelRequest::LevelRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LevelRequest)
}
LevelRequest::LevelRequest(
    ::google::protobuf::Arena* arena, const LevelRequest& from)
    : LevelRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LevelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LevelRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.levelid_ = {};
}
LevelRequest::~LevelRequest() {
  // @@protoc_insertion_point(destructor:LevelRequest)
  SharedDtor(*this);
}
inline void LevelRequest::SharedDtor(MessageLite& self) {
  LevelRequest& this_ = static_cast<LevelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LevelRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LevelRequest(arena);
}
constexpr auto LevelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LevelRequest),
                                            alignof(LevelRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LevelRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LevelRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LevelRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LevelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LevelRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LevelRequest>(), &LevelRequest::ByteSizeLong,
            &LevelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LevelRequest, _impl_._cached_size_),
        false,
    },
    &LevelRequest::kDescriptorMethods,
    &descriptor_table_LevelData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LevelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LevelRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::LevelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 LevelId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LevelRequest, _impl_.levelid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LevelRequest, _impl_.levelid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 LevelId = 1;
    {PROTOBUF_FIELD_OFFSET(LevelRequest, _impl_.levelid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LevelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:LevelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.levelid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LevelRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LevelRequest& this_ = static_cast<const LevelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LevelRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LevelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:LevelRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 LevelId = 1;
          if (this_._internal_levelid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_levelid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:LevelRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LevelRequest::ByteSizeLong(const MessageLite& base) {
          const LevelRequest& this_ = static_cast<const LevelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LevelRequest::ByteSizeLong() const {
          const LevelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:LevelRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 LevelId = 1;
            if (this_._internal_levelid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_levelid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LevelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LevelRequest*>(&to_msg);
  auto& from = static_cast<const LevelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LevelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_levelid() != 0) {
    _this->_impl_.levelid_ = from._impl_.levelid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LevelRequest::CopyFrom(const LevelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LevelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LevelRequest::InternalSwap(LevelRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.levelid_, other->_impl_.levelid_);
}

::google::protobuf::Metadata LevelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LevelData::_Internal {
 public:
};

LevelData::LevelData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LevelData)
}
inline PROTOBUF_NDEBUG_INLINE LevelData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::LevelData& from_msg)
      : objectlist_{visibility, arena, from.objectlist_},
        _cached_size_{0} {}

LevelData::LevelData(
    ::google::protobuf::Arena* arena,
    const LevelData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LevelData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:LevelData)
}
inline PROTOBUF_NDEBUG_INLINE LevelData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : objectlist_{visibility, arena},
        _cached_size_{0} {}

inline void LevelData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LevelData::~LevelData() {
  // @@protoc_insertion_point(destructor:LevelData)
  SharedDtor(*this);
}
inline void LevelData::SharedDtor(MessageLite& self) {
  LevelData& this_ = static_cast<LevelData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LevelData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LevelData(arena);
}
constexpr auto LevelData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LevelData, _impl_.objectlist_) +
          decltype(LevelData::_impl_.objectlist_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LevelData), alignof(LevelData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LevelData::PlacementNew_,
                                 sizeof(LevelData),
                                 alignof(LevelData));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LevelData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LevelData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LevelData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LevelData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LevelData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LevelData>(), &LevelData::ByteSizeLong,
            &LevelData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LevelData, _impl_._cached_size_),
        false,
    },
    &LevelData::kDescriptorMethods,
    &descriptor_table_LevelData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LevelData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LevelData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::LevelData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ObjectData objectList = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LevelData, _impl_.objectlist_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ObjectData objectList = 1;
    {PROTOBUF_FIELD_OFFSET(LevelData, _impl_.objectlist_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ObjectData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LevelData::Clear() {
// @@protoc_insertion_point(message_clear_start:LevelData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.objectlist_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LevelData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LevelData& this_ = static_cast<const LevelData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LevelData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LevelData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:LevelData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .ObjectData objectList = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_objectlist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_objectlist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:LevelData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LevelData::ByteSizeLong(const MessageLite& base) {
          const LevelData& this_ = static_cast<const LevelData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LevelData::ByteSizeLong() const {
          const LevelData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:LevelData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .ObjectData objectList = 1;
            {
              total_size += 1UL * this_._internal_objectlist_size();
              for (const auto& msg : this_._internal_objectlist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LevelData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LevelData*>(&to_msg);
  auto& from = static_cast<const LevelData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LevelData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_objectlist()->MergeFrom(
      from._internal_objectlist());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LevelData::CopyFrom(const LevelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LevelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LevelData::InternalSwap(LevelData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.objectlist_.InternalSwap(&other->_impl_.objectlist_);
}

::google::protobuf::Metadata LevelData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeshDataChunk::_Internal {
 public:
};

MeshDataChunk::MeshDataChunk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MeshDataChunk)
}
inline PROTOBUF_NDEBUG_INLINE MeshDataChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MeshDataChunk& from_msg)
      : name_(arena, from.name_),
        datachunk_(arena, from.datachunk_),
        _cached_size_{0} {}

MeshDataChunk::MeshDataChunk(
    ::google::protobuf::Arena* arena,
    const MeshDataChunk& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MeshDataChunk* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, chunknumber_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, chunknumber_),
           offsetof(Impl_, islastchunk_) -
               offsetof(Impl_, chunknumber_) +
               sizeof(Impl_::islastchunk_));

  // @@protoc_insertion_point(copy_constructor:MeshDataChunk)
}
inline PROTOBUF_NDEBUG_INLINE MeshDataChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        datachunk_(arena),
        _cached_size_{0} {}

inline void MeshDataChunk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, chunknumber_),
           0,
           offsetof(Impl_, islastchunk_) -
               offsetof(Impl_, chunknumber_) +
               sizeof(Impl_::islastchunk_));
}
MeshDataChunk::~MeshDataChunk() {
  // @@protoc_insertion_point(destructor:MeshDataChunk)
  SharedDtor(*this);
}
inline void MeshDataChunk::SharedDtor(MessageLite& self) {
  MeshDataChunk& this_ = static_cast<MeshDataChunk&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.datachunk_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MeshDataChunk::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MeshDataChunk(arena);
}
constexpr auto MeshDataChunk::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MeshDataChunk),
                                            alignof(MeshDataChunk));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MeshDataChunk::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MeshDataChunk_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MeshDataChunk::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MeshDataChunk>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MeshDataChunk::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MeshDataChunk>(), &MeshDataChunk::ByteSizeLong,
            &MeshDataChunk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_._cached_size_),
        false,
    },
    &MeshDataChunk::kDescriptorMethods,
    &descriptor_table_LevelData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MeshDataChunk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 26, 2> MeshDataChunk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MeshDataChunk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.name_)}},
    // bytes dataChunk = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.datachunk_)}},
    // int32 chunkNumber = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MeshDataChunk, _impl_.chunknumber_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.chunknumber_)}},
    // int32 maxChunkNumber = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MeshDataChunk, _impl_.maxchunknumber_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.maxchunknumber_)}},
    // bool isLastChunk = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MeshDataChunk, _impl_.islastchunk_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.islastchunk_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes dataChunk = 2;
    {PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.datachunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 chunkNumber = 3;
    {PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.chunknumber_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 maxChunkNumber = 4;
    {PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.maxchunknumber_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool isLastChunk = 5;
    {PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.islastchunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\15\4\0\0\0\0\0\0"
    "MeshDataChunk"
    "name"
  }},
};

PROTOBUF_NOINLINE void MeshDataChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:MeshDataChunk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.datachunk_.ClearToEmpty();
  ::memset(&_impl_.chunknumber_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.islastchunk_) -
      reinterpret_cast<char*>(&_impl_.chunknumber_)) + sizeof(_impl_.islastchunk_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MeshDataChunk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MeshDataChunk& this_ = static_cast<const MeshDataChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MeshDataChunk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MeshDataChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MeshDataChunk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MeshDataChunk.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes dataChunk = 2;
          if (!this_._internal_datachunk().empty()) {
            const std::string& _s = this_._internal_datachunk();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // int32 chunkNumber = 3;
          if (this_._internal_chunknumber() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_chunknumber(), target);
          }

          // int32 maxChunkNumber = 4;
          if (this_._internal_maxchunknumber() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_maxchunknumber(), target);
          }

          // bool isLastChunk = 5;
          if (this_._internal_islastchunk() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_islastchunk(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MeshDataChunk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MeshDataChunk::ByteSizeLong(const MessageLite& base) {
          const MeshDataChunk& this_ = static_cast<const MeshDataChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MeshDataChunk::ByteSizeLong() const {
          const MeshDataChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MeshDataChunk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // bytes dataChunk = 2;
            if (!this_._internal_datachunk().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_datachunk());
            }
            // int32 chunkNumber = 3;
            if (this_._internal_chunknumber() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_chunknumber());
            }
            // int32 maxChunkNumber = 4;
            if (this_._internal_maxchunknumber() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_maxchunknumber());
            }
            // bool isLastChunk = 5;
            if (this_._internal_islastchunk() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MeshDataChunk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeshDataChunk*>(&to_msg);
  auto& from = static_cast<const MeshDataChunk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MeshDataChunk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_datachunk().empty()) {
    _this->_internal_set_datachunk(from._internal_datachunk());
  }
  if (from._internal_chunknumber() != 0) {
    _this->_impl_.chunknumber_ = from._impl_.chunknumber_;
  }
  if (from._internal_maxchunknumber() != 0) {
    _this->_impl_.maxchunknumber_ = from._impl_.maxchunknumber_;
  }
  if (from._internal_islastchunk() != 0) {
    _this->_impl_.islastchunk_ = from._impl_.islastchunk_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeshDataChunk::CopyFrom(const MeshDataChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MeshDataChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeshDataChunk::InternalSwap(MeshDataChunk* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.datachunk_, &other->_impl_.datachunk_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.islastchunk_)
      + sizeof(MeshDataChunk::_impl_.islastchunk_)
      - PROTOBUF_FIELD_OFFSET(MeshDataChunk, _impl_.chunknumber_)>(
          reinterpret_cast<char*>(&_impl_.chunknumber_),
          reinterpret_cast<char*>(&other->_impl_.chunknumber_));
}

::google::protobuf::Metadata MeshDataChunk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextureDataChunk::_Internal {
 public:
};

TextureDataChunk::TextureDataChunk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TextureDataChunk)
}
inline PROTOBUF_NDEBUG_INLINE TextureDataChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::TextureDataChunk& from_msg)
      : name_(arena, from.name_),
        datachunk_(arena, from.datachunk_),
        _cached_size_{0} {}

TextureDataChunk::TextureDataChunk(
    ::google::protobuf::Arena* arena,
    const TextureDataChunk& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextureDataChunk* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, chunknumber_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, chunknumber_),
           offsetof(Impl_, channel_) -
               offsetof(Impl_, chunknumber_) +
               sizeof(Impl_::channel_));

  // @@protoc_insertion_point(copy_constructor:TextureDataChunk)
}
inline PROTOBUF_NDEBUG_INLINE TextureDataChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        datachunk_(arena),
        _cached_size_{0} {}

inline void TextureDataChunk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, chunknumber_),
           0,
           offsetof(Impl_, channel_) -
               offsetof(Impl_, chunknumber_) +
               sizeof(Impl_::channel_));
}
TextureDataChunk::~TextureDataChunk() {
  // @@protoc_insertion_point(destructor:TextureDataChunk)
  SharedDtor(*this);
}
inline void TextureDataChunk::SharedDtor(MessageLite& self) {
  TextureDataChunk& this_ = static_cast<TextureDataChunk&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.datachunk_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TextureDataChunk::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TextureDataChunk(arena);
}
constexpr auto TextureDataChunk::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TextureDataChunk),
                                            alignof(TextureDataChunk));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TextureDataChunk::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TextureDataChunk_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TextureDataChunk::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TextureDataChunk>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TextureDataChunk::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TextureDataChunk>(), &TextureDataChunk::ByteSizeLong,
            &TextureDataChunk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_._cached_size_),
        false,
    },
    &TextureDataChunk::kDescriptorMethods,
    &descriptor_table_LevelData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TextureDataChunk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 37, 2> TextureDataChunk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TextureDataChunk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 channel = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextureDataChunk, _impl_.channel_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.channel_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.name_)}},
    // bytes dataChunk = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.datachunk_)}},
    // int32 chunkNumber = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextureDataChunk, _impl_.chunknumber_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.chunknumber_)}},
    // int32 maxChunkNumber = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextureDataChunk, _impl_.maxchunknumber_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.maxchunknumber_)}},
    // bool isLastChunk = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TextureDataChunk, _impl_.islastchunk_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.islastchunk_)}},
    // int32 width = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextureDataChunk, _impl_.width_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.width_)}},
    // int32 height = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextureDataChunk, _impl_.height_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes dataChunk = 2;
    {PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.datachunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 chunkNumber = 3;
    {PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.chunknumber_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 maxChunkNumber = 4;
    {PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.maxchunknumber_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool isLastChunk = 5;
    {PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.islastchunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 width = 6;
    {PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 height = 7;
    {PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 channel = 8;
    {PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\20\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "TextureDataChunk"
    "name"
  }},
};

PROTOBUF_NOINLINE void TextureDataChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:TextureDataChunk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.datachunk_.ClearToEmpty();
  ::memset(&_impl_.chunknumber_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.channel_) -
      reinterpret_cast<char*>(&_impl_.chunknumber_)) + sizeof(_impl_.channel_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TextureDataChunk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TextureDataChunk& this_ = static_cast<const TextureDataChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TextureDataChunk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TextureDataChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TextureDataChunk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TextureDataChunk.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes dataChunk = 2;
          if (!this_._internal_datachunk().empty()) {
            const std::string& _s = this_._internal_datachunk();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // int32 chunkNumber = 3;
          if (this_._internal_chunknumber() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_chunknumber(), target);
          }

          // int32 maxChunkNumber = 4;
          if (this_._internal_maxchunknumber() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_maxchunknumber(), target);
          }

          // bool isLastChunk = 5;
          if (this_._internal_islastchunk() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_islastchunk(), target);
          }

          // int32 width = 6;
          if (this_._internal_width() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_width(), target);
          }

          // int32 height = 7;
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_height(), target);
          }

          // int32 channel = 8;
          if (this_._internal_channel() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_channel(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TextureDataChunk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TextureDataChunk::ByteSizeLong(const MessageLite& base) {
          const TextureDataChunk& this_ = static_cast<const TextureDataChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TextureDataChunk::ByteSizeLong() const {
          const TextureDataChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TextureDataChunk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // bytes dataChunk = 2;
            if (!this_._internal_datachunk().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_datachunk());
            }
            // int32 chunkNumber = 3;
            if (this_._internal_chunknumber() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_chunknumber());
            }
            // int32 maxChunkNumber = 4;
            if (this_._internal_maxchunknumber() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_maxchunknumber());
            }
            // bool isLastChunk = 5;
            if (this_._internal_islastchunk() != 0) {
              total_size += 2;
            }
            // int32 width = 6;
            if (this_._internal_width() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_width());
            }
            // int32 height = 7;
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_height());
            }
            // int32 channel = 8;
            if (this_._internal_channel() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_channel());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TextureDataChunk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextureDataChunk*>(&to_msg);
  auto& from = static_cast<const TextureDataChunk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TextureDataChunk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_datachunk().empty()) {
    _this->_internal_set_datachunk(from._internal_datachunk());
  }
  if (from._internal_chunknumber() != 0) {
    _this->_impl_.chunknumber_ = from._impl_.chunknumber_;
  }
  if (from._internal_maxchunknumber() != 0) {
    _this->_impl_.maxchunknumber_ = from._impl_.maxchunknumber_;
  }
  if (from._internal_islastchunk() != 0) {
    _this->_impl_.islastchunk_ = from._impl_.islastchunk_;
  }
  if (from._internal_width() != 0) {
    _this->_impl_.width_ = from._impl_.width_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_channel() != 0) {
    _this->_impl_.channel_ = from._impl_.channel_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextureDataChunk::CopyFrom(const TextureDataChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TextureDataChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextureDataChunk::InternalSwap(TextureDataChunk* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.datachunk_, &other->_impl_.datachunk_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.channel_)
      + sizeof(TextureDataChunk::_impl_.channel_)
      - PROTOBUF_FIELD_OFFSET(TextureDataChunk, _impl_.chunknumber_)>(
          reinterpret_cast<char*>(&_impl_.chunknumber_),
          reinterpret_cast<char*>(&other->_impl_.chunknumber_));
}

::google::protobuf::Metadata TextureDataChunk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeshChunkRequest::_Internal {
 public:
};

MeshChunkRequest::MeshChunkRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MeshChunkRequest)
}
inline PROTOBUF_NDEBUG_INLINE MeshChunkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MeshChunkRequest& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

MeshChunkRequest::MeshChunkRequest(
    ::google::protobuf::Arena* arena,
    const MeshChunkRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MeshChunkRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, levelid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, levelid_),
           offsetof(Impl_, chunknumber_) -
               offsetof(Impl_, levelid_) +
               sizeof(Impl_::chunknumber_));

  // @@protoc_insertion_point(copy_constructor:MeshChunkRequest)
}
inline PROTOBUF_NDEBUG_INLINE MeshChunkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void MeshChunkRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, levelid_),
           0,
           offsetof(Impl_, chunknumber_) -
               offsetof(Impl_, levelid_) +
               sizeof(Impl_::chunknumber_));
}
MeshChunkRequest::~MeshChunkRequest() {
  // @@protoc_insertion_point(destructor:MeshChunkRequest)
  SharedDtor(*this);
}
inline void MeshChunkRequest::SharedDtor(MessageLite& self) {
  MeshChunkRequest& this_ = static_cast<MeshChunkRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MeshChunkRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MeshChunkRequest(arena);
}
constexpr auto MeshChunkRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MeshChunkRequest),
                                            alignof(MeshChunkRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MeshChunkRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MeshChunkRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MeshChunkRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MeshChunkRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MeshChunkRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MeshChunkRequest>(), &MeshChunkRequest::ByteSizeLong,
            &MeshChunkRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MeshChunkRequest, _impl_._cached_size_),
        false,
    },
    &MeshChunkRequest::kDescriptorMethods,
    &descriptor_table_LevelData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MeshChunkRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 29, 2> MeshChunkRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MeshChunkRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 LevelId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MeshChunkRequest, _impl_.levelid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MeshChunkRequest, _impl_.levelid_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MeshChunkRequest, _impl_.name_)}},
    // int32 chunkNumber = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MeshChunkRequest, _impl_.chunknumber_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MeshChunkRequest, _impl_.chunknumber_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 LevelId = 1;
    {PROTOBUF_FIELD_OFFSET(MeshChunkRequest, _impl_.levelid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(MeshChunkRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 chunkNumber = 3;
    {PROTOBUF_FIELD_OFFSET(MeshChunkRequest, _impl_.chunknumber_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\20\0\4\0\0\0\0\0"
    "MeshChunkRequest"
    "name"
  }},
};

PROTOBUF_NOINLINE void MeshChunkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MeshChunkRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.levelid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.chunknumber_) -
      reinterpret_cast<char*>(&_impl_.levelid_)) + sizeof(_impl_.chunknumber_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MeshChunkRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MeshChunkRequest& this_ = static_cast<const MeshChunkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MeshChunkRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MeshChunkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MeshChunkRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 LevelId = 1;
          if (this_._internal_levelid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_levelid(), target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MeshChunkRequest.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 chunkNumber = 3;
          if (this_._internal_chunknumber() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_chunknumber(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MeshChunkRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MeshChunkRequest::ByteSizeLong(const MessageLite& base) {
          const MeshChunkRequest& this_ = static_cast<const MeshChunkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MeshChunkRequest::ByteSizeLong() const {
          const MeshChunkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MeshChunkRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // int32 LevelId = 1;
            if (this_._internal_levelid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_levelid());
            }
            // int32 chunkNumber = 3;
            if (this_._internal_chunknumber() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_chunknumber());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MeshChunkRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeshChunkRequest*>(&to_msg);
  auto& from = static_cast<const MeshChunkRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MeshChunkRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_levelid() != 0) {
    _this->_impl_.levelid_ = from._impl_.levelid_;
  }
  if (from._internal_chunknumber() != 0) {
    _this->_impl_.chunknumber_ = from._impl_.chunknumber_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeshChunkRequest::CopyFrom(const MeshChunkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MeshChunkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeshChunkRequest::InternalSwap(MeshChunkRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MeshChunkRequest, _impl_.chunknumber_)
      + sizeof(MeshChunkRequest::_impl_.chunknumber_)
      - PROTOBUF_FIELD_OFFSET(MeshChunkRequest, _impl_.levelid_)>(
          reinterpret_cast<char*>(&_impl_.levelid_),
          reinterpret_cast<char*>(&other->_impl_.levelid_));
}

::google::protobuf::Metadata MeshChunkRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextureChunkRequest::_Internal {
 public:
};

TextureChunkRequest::TextureChunkRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TextureChunkRequest)
}
inline PROTOBUF_NDEBUG_INLINE TextureChunkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::TextureChunkRequest& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

TextureChunkRequest::TextureChunkRequest(
    ::google::protobuf::Arena* arena,
    const TextureChunkRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextureChunkRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, levelid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, levelid_),
           offsetof(Impl_, chunknumber_) -
               offsetof(Impl_, levelid_) +
               sizeof(Impl_::chunknumber_));

  // @@protoc_insertion_point(copy_constructor:TextureChunkRequest)
}
inline PROTOBUF_NDEBUG_INLINE TextureChunkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void TextureChunkRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, levelid_),
           0,
           offsetof(Impl_, chunknumber_) -
               offsetof(Impl_, levelid_) +
               sizeof(Impl_::chunknumber_));
}
TextureChunkRequest::~TextureChunkRequest() {
  // @@protoc_insertion_point(destructor:TextureChunkRequest)
  SharedDtor(*this);
}
inline void TextureChunkRequest::SharedDtor(MessageLite& self) {
  TextureChunkRequest& this_ = static_cast<TextureChunkRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TextureChunkRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TextureChunkRequest(arena);
}
constexpr auto TextureChunkRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TextureChunkRequest),
                                            alignof(TextureChunkRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TextureChunkRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TextureChunkRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TextureChunkRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TextureChunkRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TextureChunkRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TextureChunkRequest>(), &TextureChunkRequest::ByteSizeLong,
            &TextureChunkRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TextureChunkRequest, _impl_._cached_size_),
        false,
    },
    &TextureChunkRequest::kDescriptorMethods,
    &descriptor_table_LevelData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TextureChunkRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 32, 2> TextureChunkRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TextureChunkRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 LevelId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextureChunkRequest, _impl_.levelid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TextureChunkRequest, _impl_.levelid_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TextureChunkRequest, _impl_.name_)}},
    // int32 chunkNumber = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextureChunkRequest, _impl_.chunknumber_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TextureChunkRequest, _impl_.chunknumber_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 LevelId = 1;
    {PROTOBUF_FIELD_OFFSET(TextureChunkRequest, _impl_.levelid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(TextureChunkRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 chunkNumber = 3;
    {PROTOBUF_FIELD_OFFSET(TextureChunkRequest, _impl_.chunknumber_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\23\0\4\0\0\0\0\0"
    "TextureChunkRequest"
    "name"
  }},
};

PROTOBUF_NOINLINE void TextureChunkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TextureChunkRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.levelid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.chunknumber_) -
      reinterpret_cast<char*>(&_impl_.levelid_)) + sizeof(_impl_.chunknumber_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TextureChunkRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TextureChunkRequest& this_ = static_cast<const TextureChunkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TextureChunkRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TextureChunkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TextureChunkRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 LevelId = 1;
          if (this_._internal_levelid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_levelid(), target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TextureChunkRequest.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 chunkNumber = 3;
          if (this_._internal_chunknumber() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_chunknumber(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TextureChunkRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TextureChunkRequest::ByteSizeLong(const MessageLite& base) {
          const TextureChunkRequest& this_ = static_cast<const TextureChunkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TextureChunkRequest::ByteSizeLong() const {
          const TextureChunkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TextureChunkRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // int32 LevelId = 1;
            if (this_._internal_levelid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_levelid());
            }
            // int32 chunkNumber = 3;
            if (this_._internal_chunknumber() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_chunknumber());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TextureChunkRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextureChunkRequest*>(&to_msg);
  auto& from = static_cast<const TextureChunkRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TextureChunkRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_levelid() != 0) {
    _this->_impl_.levelid_ = from._impl_.levelid_;
  }
  if (from._internal_chunknumber() != 0) {
    _this->_impl_.chunknumber_ = from._impl_.chunknumber_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextureChunkRequest::CopyFrom(const TextureChunkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TextureChunkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextureChunkRequest::InternalSwap(TextureChunkRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TextureChunkRequest, _impl_.chunknumber_)
      + sizeof(TextureChunkRequest::_impl_.chunknumber_)
      - PROTOBUF_FIELD_OFFSET(TextureChunkRequest, _impl_.levelid_)>(
          reinterpret_cast<char*>(&_impl_.levelid_),
          reinterpret_cast<char*>(&other->_impl_.levelid_));
}

::google::protobuf::Metadata TextureChunkRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ObjectData::_Internal {
 public:
};

ObjectData::ObjectData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ObjectData)
}
inline PROTOBUF_NDEBUG_INLINE ObjectData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ObjectData& from_msg)
      : name_(arena, from.name_),
        meshreference_(arena, from.meshreference_),
        texturereference_(arena, from.texturereference_),
        _cached_size_{0} {}

ObjectData::ObjectData(
    ::google::protobuf::Arena* arena,
    const ObjectData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ObjectData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ObjectData)
}
inline PROTOBUF_NDEBUG_INLINE ObjectData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        meshreference_(arena),
        texturereference_(arena),
        _cached_size_{0} {}

inline void ObjectData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ObjectData::~ObjectData() {
  // @@protoc_insertion_point(destructor:ObjectData)
  SharedDtor(*this);
}
inline void ObjectData::SharedDtor(MessageLite& self) {
  ObjectData& this_ = static_cast<ObjectData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.meshreference_.Destroy();
  this_._impl_.texturereference_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ObjectData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ObjectData(arena);
}
constexpr auto ObjectData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ObjectData),
                                            alignof(ObjectData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ObjectData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ObjectData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ObjectData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ObjectData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ObjectData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ObjectData>(), &ObjectData::ByteSizeLong,
            &ObjectData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ObjectData, _impl_._cached_size_),
        false,
    },
    &ObjectData::kDescriptorMethods,
    &descriptor_table_LevelData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ObjectData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 0, 52, 2> ObjectData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967246,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ObjectData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string textureReference = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ObjectData, _impl_.texturereference_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ObjectData, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ObjectData, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string meshReference = 5;
    {PROTOBUF_FIELD_OFFSET(ObjectData, _impl_.meshreference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string textureReference = 6;
    {PROTOBUF_FIELD_OFFSET(ObjectData, _impl_.texturereference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\4\15\20\0\0\0\0"
    "ObjectData"
    "name"
    "meshReference"
    "textureReference"
  }},
};

PROTOBUF_NOINLINE void ObjectData::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.meshreference_.ClearToEmpty();
  _impl_.texturereference_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ObjectData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ObjectData& this_ = static_cast<const ObjectData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ObjectData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ObjectData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ObjectData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ObjectData.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string meshReference = 5;
          if (!this_._internal_meshreference().empty()) {
            const std::string& _s = this_._internal_meshreference();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ObjectData.meshReference");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string textureReference = 6;
          if (!this_._internal_texturereference().empty()) {
            const std::string& _s = this_._internal_texturereference();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ObjectData.textureReference");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ObjectData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ObjectData::ByteSizeLong(const MessageLite& base) {
          const ObjectData& this_ = static_cast<const ObjectData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ObjectData::ByteSizeLong() const {
          const ObjectData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ObjectData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string meshReference = 5;
            if (!this_._internal_meshreference().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_meshreference());
            }
            // string textureReference = 6;
            if (!this_._internal_texturereference().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_texturereference());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ObjectData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ObjectData*>(&to_msg);
  auto& from = static_cast<const ObjectData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ObjectData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_meshreference().empty()) {
    _this->_internal_set_meshreference(from._internal_meshreference());
  }
  if (!from._internal_texturereference().empty()) {
    _this->_internal_set_texturereference(from._internal_texturereference());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectData::CopyFrom(const ObjectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ObjectData::InternalSwap(ObjectData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.meshreference_, &other->_impl_.meshreference_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.texturereference_, &other->_impl_.texturereference_, arena);
}

::google::protobuf::Metadata ObjectData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_LevelData_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
